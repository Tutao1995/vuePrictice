class Shape {
  isHovered: boolean = false;
  
  draw(ctx: CanvasRenderingContext2D) {
    if (this.isHovered && currentType === 'handle') {
      ctx.save();
      ctx.strokeStyle = '#666';
      ctx.setLineDash([5, 5]);
      ctx.strokeRect(
        this.x - this.width/2 - 2,
        this.y - this.height/2 - 2,
        this.width + 4,
        this.height + 4
      );
      ctx.restore();
    }
  }
}

function handleMouseMove(e: MouseEvent) {
  const mouseX = e.offsetX;
  const mouseY = e.offsetY;
  
  shapes.forEach(shape => {
    if (currentType === 'handle') {
      const isMouseOver = shape.isPointInside(mouseX, mouseY);
      
      if (shape.isHovered !== isMouseOver) {
        shape.isHovered = isMouseOver;
        redraw();
      }
    } else {
      if (shape.isHovered) {
        shape.isHovered = false;
        redraw();
      }
    }
  });
} 